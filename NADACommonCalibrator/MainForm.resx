<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="largeImageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v12.2" name="DevExpress.Utils.v12.2, Version=12.2.15.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="largeImageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v12.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFtEZXZFeHByZXNzLlV0aWxzLnYxMi4yLCBWZXJzaW9uPTEyLjIu
        MTUuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iODhkMTc1NGQ3MDBlNDlhDAMAAABR
        U3lzdGVtLkRyYXdpbmcsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
        b2tlbj1iMDNmNWY3ZjExZDUwYTNhBQEAAAAoRGV2RXhwcmVzcy5VdGlscy5JbWFnZUNvbGxlY3Rpb25T
        dHJlYW1lcgIAAAAJSW1hZ2VTaXplBERhdGEEBxNTeXN0ZW0uRHJhd2luZy5TaXplAwAAAAICAAAABfz/
        //8TU3lzdGVtLkRyYXdpbmcuU2l6ZQIAAAAFd2lkdGgGaGVpZ2h0AAAICAMAAAAYAAAAGAAAAAkFAAAA
        DwUAAAByDgAAAu0DAACJUE5HDQoaCgAAAA1JSERSAAAAGAAAABgIBgAAAOB3PfgAAAAEZ0FNQQAAsY8L
        /GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADj0lEQVRIS7VWSU9TURR+caULN+IQEwVNNPoDnDYu1Khx
        YdwYTMAYjZioMW5InCIJG6OJxiiI2gmhQKEtxdK5DNKBSUYxJkQajVIpFGgCbQEZ+o7v3L5729dWYmL4
        ki99Pfec776ec+655VYD/4nbPena+WDAfKrF25A73lZ/caVNnx/zGnIn+k2nP0y0ZRfxXdxe0f3fAYPc
        rhHnwTqr5mZMLisFmexVRuKaueYWP2w/3MD3c3vE8NUx056V36y9EskkuBqd2oK5afe2q6JMZky5dhTq
        1fd5GiSXl4HdbgGfbwQikTDEYjEYGhpME6fUVj6EibZdRaKcFDPerLxkcZ1OA5OTQUjF2NgvUCrfpIlT
        4iYh99YCUTYOIX85LbrLYepkNr+HpaUlURIgEPgFnZ1esNnMoFK9TRNFVlWVs2dH3bV5fiCp+CPOAxq6
        qNPVCOKLRHhuLgoWSyMLFLoIhqzHBB6HIcsJwqryR2TN7/8Jen0t8x12HDEScXx7W+2NlfhCGQSDE0Q8
        Go2CRqNmASrFc/jdvR74Xo7xq/MQSdf4eAB4nofp6SlSN/Q31dzm+R5uHxfybL8jl5cQIxaUwmw2MnGk
        qz5fIj7bvhnKlc/iYqYGMQqgudkuxpRC0L27mBswnXRQEZ/vK3EKBMZEpwSDrhwmvtKzDozVhZJ1TBHi
        x4/vzNZrOuPhvA3n/dQQDs8Sp+7uDuaErFffk7z9Z6EOlaonhAr5S+Lj9bpI7MLCPIvzGC6EOFd93gI1
        xGIrxMnptDIn5BfbUckGlKOt+9kG2AwUCsVrYmvVX4KUDWLEweFIbJCpuMhJdzaUK+I1QFqtJhKLxaaF
        JhtkSlFXVzsL1FQUw8fGs4RTnh1EfKZ9C6hVj5kPsqPDQ2IjkQizkRRJizxCnDIV+Z3yqfBLNsBc50ao
        FTZNXff7R0nst28+ZiNF/lubWq2JA4bsNp6DRSFVhqq7EjvSaDSIUQBNTYk2Hcc2lR40oR2Fg4Z5xE+V
        SkZsSvkLCHdsAovmlhicYHV1BRmEiFBoOv2gIZJHhVZbQwYa/Y50G/JAmFUSGxJnVjQaIeLLy8tgMGjZ
        GhsViNRhp1armKNcVgL2uuvkGccCDjwcfPgSFDgYbTYTi0kbdojUcZ1g/EbD3h4djZ/WZGAqcbRT/4zj
        miL1wkllX18PqQ+2InYLnheac+SqFw7Fml6ZFGt66Sfj//+2cNwfTWWGOSdtBN4AAAAASUVORK5CYILS
        BAAAiVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlz
        AAAOwwAADsMBx2+oZAAABHRJREFUSEvtlH1MlVUcx597xXyhudxsksN3zQTuBQW8gIhwQRQv7/cCSlxF
        ERHCvKQtFZLpMC0TzWUh5TRUvBCCKSkCvmG4QOVCvEiUiqnNpUiQy7/k03noWs3ErdZaf/TdPnuePTs7
        n/M7v3Me6f/8dzJwugNBQXPRarUsWbqcuIVJREUbiYw24BQ160dJP3WHlJmptA7/61mRkw0dCbyfFUCc
        wZ3L1ZHQPo/286EY5/mhdg0go2Qr11rPcvO7K3Te6+D2nTso57yEwm8SUpAK61RPjmuuCnNuLMvT1pGc
        uhIfHx98ff2ZGxrLTH89FQdmk/7pduR0dXdxVwge/PwAXVoCLgtCkNzsny5Q71Sj2xmH73safrq6hPtt
        i0iOn0lhjg6+j6PheAiKWEeU0c4o9c5IISpclulxT4hA8hyL/+KYvgUPe3r4cPcB3jRnM3nDDCZmzKDi
        5GkCN8XzfIoXQxM1DFwwjdbrV5AiVXxUUEjhsVI2v70F+4gZSNNGotIH9C24ce8BN27dpkeUf7ejg9av
        v+FCg4Xxr83GLtmPHSV52Bo9ec7ogxTsyC6zmYOlR1DMmkykIQr/gFlCMqJvwfWuh1yos9B+8xadXd30
        iIosTY2EZ6Wy7J10HE0GRiXrGJEwG2W4C/lHSjlUXsaCrevw0/rj5u6OpBnet6BdCK519lBQegLv1Sto
        avuWqtoaRi8OJDg0rHcS23leTEgJI7con8Qt6Ziy16NNnU9W1ltMjQ/ExvspFZTXNHOu9Tb7io/2UlBa
        JgS1OC2LwNdPi0bjQf8oN7H/orlBY5m/wcRYcQCKj1fS1NyE29JAurvuy4J+AkXvpI+novIUyhgX9h4s
        7JWUf1GFjcENV08NarWaIbEeKAwqBukdcffQoNSN4Uj5KVpaWli0KZWaSxZZMFowSmAvsBPYCqyJcqG+
        sRFxY8VKp7B7X554d0EhvitinFFEO4kFOKA26Yjf8Cr9QuzZX3KUlsstJGWbuGhpkAUTBOOtT5khAmvE
        xMZ31zIhKRgpzAFZWHzoMBWVp1HOd8K4bSX6zSb27N2DIkw0dM5QISilvqGeFTtfp+4rsThJchQ4WJ9j
        BPKW/ZqiQyVkZGTwSd5+pq2KYUpaFKt37cDzjXBRxUiGJ3kwfW045gIzZ5qrqao5/5sgNDOC+qZmWTDV
        irPgD6uXJJt8c8GutWvWdNdZ6jlz9hz5m4qoyrxI9cY68lYfx3u9Hq/0CGwX2nOqqYoPinM5cNgqWB/K
        uS9rZYGXFXl7/vRjlBsiN2mmIOiz2EoesWhyNomqbfzQlsK9q6uQDIMY8vIwFJH9kAIlwjaGUl17SRZo
        Bd6CZwVPja3zC67hjwSJTttZqt5G3Rk9refnUJQzRlwuN06UnWB32cccKyvHLtFOFugELwqefFQfizxI
        rmqSwEngd7jIxMnPE3oFA4wDGLjQRtAfu+XDGPzKM7IgQDBY8LciC+XGjRTIZ9xVECmIlXzHWQan9ArG
        Cf7xDBJMFMiV/n4s/51I0i9wUJDHPZGfMgAAAABJRU5ErkJggq4BAACJUE5HDQoaCgAAAA1JSERSAAAA
        GAAAABgIBgAAAOB3PfgAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAABUElEQVRI
        S62SvUoDQRSFB1KmsBTfQTCJoGBsbCyFFKkUX8MujYWFbZqQzmWXGAQx4EPkLULAUhsLIQGjN7l3Mnv3
        7Oys64GPnbk/5yzsmjL6GBzuLOJGbzXu1rhUTd9Ra28RN1dF8Hg5IaMieNWvZdS8QMtC/XUI6wLbYC2j
        gw5acqGAP4egYZf+03VQAMGWW6EhjZiHBBBsHf63uAFvyUmq/p4cpWYJtg//Y9wAQtfdWSE3AC3RfTTu
        pnpylrsmOGDy2LH3s5dbe5Y5QeYF8znc39VFtJB3l5ruC79v3+jpol52a3kz86Sdqgnm/uGqjhpfccue
        fQHT0Xmm5rL+BqihTel5+XxjzWbJqe35WAegBqEDdD8EbwAhIZUCSKhJVAlg643QAPFvASQ0JObHk7tM
        zwdbZoWGy749W+ULLYXCFsVCy0XwajkhIw2PAhnzAxT8sU5jCEvFAAAAAElFTkSuQmCC9QMAAIlQTkcN
        ChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7D
        AcdvqGQAAAOXSURBVEhLvZXdT1pJGIe971Wve9nsH9GYTfZSUj/a2Ghsm2zMpkmru11jjIZtTUR609Rq
        7KY2y2pKC6hQWhCw5RRQQEQ+ysEiAbWWiibrbvZ+/Wh3f/vOKDAjt6QkT4b3B5ln5sycmTr22dnZObe7
        u/tNLSkWi+f39vbO1Pl8vu+6bv98pH84hlqi1en/0w3fM9b5/f7rhmkr8vuoKYubRTwyTL2pErgSq2i7
        eg1X2tpx4+YtXG5tRfOly2hqaaH2EpqaWXtct5Rzaim/0t6OV8tJ3k+QBL+WBTNWbByA44yleEd9fX1I
        JpMYGhqCVqtFb28vZ2BgAJ2dnTzr6OiAXq+HxWKBRqPBxcYmvFyK8X5CH0gweSKYJMGHQ3Bc8YpgcXER
        Y2NjWFtbg9PphMFgQCAQwMTEBO90ZGQEJpOJf29oaCBBIxyRGO9naUsQTJGgcASO50TQ3d2N0dFR6HQ6
        BINBmM1mKIrCBcPDwzzr6urC4OAgpqen0UqPkgnmSMD6Wf5YxOOyYNaK4mdwVv/8GzNvFJhcHpjc88Rx
        +8IXgD+p4nkpp9Z88jtvqba89iL9x1+8n1ihiImS4CkTHH5B4Z+DMp+I7YMjKWMUDz9L9af9Q2zvH/H/
        M0p5orBdERitVjz0plH/ICrRY3+E+sj3qI8e8637OrzPxhG9VV8mpG2D4a4Zhp6ExOvlKJ5MnQiekeBJ
        aB2aybzEHeUpNLkeaPLHNEZ+RPjF78j9crFM+v4PmH3ghm1oS8IXj1cEJhIkaFFsYVViIZuGTVUqJBS8
        z2cR9bnKxCN+hJdTtPhpiXguh99KAjMJVtJpmGi7iSgLC1VZhN4NsX45NweH2y1ljDht7bLAQoLMxgY8
        Xq9E9N27qixNIxNrfyiEhaUlKWOo+TwMJcEMCZJsBrTXRXxsBqeyFTYDoX5FL6DT5ZIyhkozkASbhQKC
        4bDEKv3pdLa+tSXVK4kE4jRTMWOsra9jsiSYJYFKM2CvvEiAjorTWYI6E2t2hLhoDcSM8T6brQisJNjY
        3ITy9q1ESlWrshyNTKzDNNpIJCJljBytwZQoSKVSMBqNEnQZVWVx2t9ibbfb4XA4pIyRoccrCXK0O9w0
        VZFYLFaVsZNVrNnhx05dMWOw/r6uIJPJwGazSbDnezpTaV3Een5+Hl7a92LGyNIicwGNoJkujn/ZaGsJ
        m8X4+Li9zuPxnKWL40Z/f//tWkLX6086ne7C/wI7qOk4hOQmAAAAAElFTkSuQmCCCw==
</value>
  </data>
  <metadata name="smallImageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 17</value>
  </metadata>
  <data name="smallImageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v12.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFtEZXZFeHByZXNzLlV0aWxzLnYxMi4yLCBWZXJzaW9uPTEyLjIu
        MTUuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iODhkMTc1NGQ3MDBlNDlhBQEAAAAo
        RGV2RXhwcmVzcy5VdGlscy5JbWFnZUNvbGxlY3Rpb25TdHJlYW1lcgAAAAACAAAACw==
</value>
  </data>
  <metadata name="snapDockManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>358, 17</value>
  </metadata>
  <metadata name="snapDocumentManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>521, 17</value>
  </metadata>
  <metadata name="defaultLookAndFeel.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>714, 17</value>
  </metadata>
  <metadata name="popupMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>883, 17</value>
  </metadata>
  <metadata name="barManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1010, 17</value>
  </metadata>
</root>